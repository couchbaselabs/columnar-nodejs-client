name: verify_release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of the SDK to install and verify."
        required: true
        default: ""
        type: string
      npm_tag:
        description: "The tag to use to install the SDK."
        required: false
        default: ""
        type: string
      test_input:
        description: "JSON formatted object representing test input."
        required: true
        default: ""
        type: string
  workflow_call:
    inputs:
      version:
        description: "The version of the SDK to install and verify."
        required: true
        default: ""
        type: string
      npm_tag:
        description: "The tag to use to install the SDK."
        required: false
        default: ""
        type: string
      test_input:
        description: "JSON formatted object representing test input."
        required: true
        default: ""
        type: string

env:
  DEFAULT_NODE: "18"

jobs:
  validate-input:
    runs-on: ubuntu-22.04
    steps:
      - name: Verify SDK version
        if: inputs.version == ''
        run: |
          echo "::error Must provide a valid SDK version."
          exit 1
      - name: Verify test input has been provided
        if: inputs.test_input == ''
        run: |
          echo "::error Must provide a test input JSON object."
          exit 1
      - name: Validate host
        if: ${{ inputs.test_input != '' && fromJSON(inputs.test_input).NCBCCCSTR == ''}}
        run: |
          echo "::error must provide NCBCCCSTR."
          exit 1
      - name: Validate user
        if: ${{ inputs.test_input != '' && fromJSON(inputs.test_input).NCBCCUSERNAME == '' }}
        run: |
          echo "::error must provide NCBCCUSERNAME."
          exit 1
      - name: Validate password
        if: ${{ inputs.test_input != '' && fromJSON(inputs.test_input).NCBCCPASSWORD == '' }}
        run: |
          echo "::error must provide NCBCCPASSWORD."
          exit 1
      - name: Validate FQDN
        if: ${{ inputs.test_input != '' && fromJSON(inputs.test_input).NCBCCFQDN == '' }}
        run: |
          echo "::error must provide NCBCCFQDN."
          exit 1

  test-setup:
    runs-on: ubuntu-22.04
    needs: validate-input
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE }}
      - name: Build testConfig.ini
        run: |
          export $(echo '${{ inputs.test_input }}' | jq -r '. | to_entries[] | join("=")')
          echo "Output environment"
          env | grep NCBCC
          cat > testConfig.ini <<EOF
          connstr = $NCBCCCSTR
          username = $NCBCCUSERNAME
          password = $NCBCCPASSWORD
          nonprod = $NCBCCNONPROD
          fqdn = $NCBCCFQDN
          EOF
          echo "Output testConfig.ini"
          cat testConfig.ini
          mkdir ncbcc-test
          mv testConfig.ini ncbcc-test
          cd ncbcc-test
          curl -o columnarQuickTest.js ${CI_SCRIPTS_URL}/releaseSmokeTests/columnarQuickTest.js
          ls -alh
        env:
          CI_SCRIPTS_URL: "https://raw.githubusercontent.com/couchbaselabs/sdkbuild-jenkinsfiles/master/couchnode"
      - name: Upload test setup
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: ncbcc-test-setup
          path: |
            ncbcc-test/

  verify-linux:
    runs-on: ubuntu-22.04
    needs: test-setup
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04']
        node-version: ["18", "20"]
        arch: ['x86_64', 'arm64']
    steps:
      - name: Set up QEMU
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - uses: actions/download-artifact@v4
        with:
          name: ncbcc-test-setup
          path: ncbcc
      - name: Run in docker (install via tag)
        if: ${{ inputs.npm_tag != '' }}
        uses: addnab/docker-run-action@v3
        with:
          image: node:${{ matrix.node-version }}-bullseye-slim
          options: >-
            --platform linux/${{ matrix.arch == 'x86_64' && 'amd64' || 'arm64'}}
            -v ${{ github.workspace }}/ncbcc:/ncbcc
            -e NPM_TAG=${{ inputs.npm_tag }}
          run: |
            env
            node --version
            cd /ncbcc
            ls -alh
            npm init -y
            npm install ini
            npm install couchbase-columnar@$NPM_TAG -ddd
            npm list --depth=2
            node columnarQuickTest.js
      - name: Run in docker (install via version)
        if: ${{ inputs.npm_tag == '' }}
        uses: addnab/docker-run-action@v3
        with:
          image: node:${{ matrix.node-version }}-bullseye-slim
          options: >-
            --platform linux/${{ matrix.arch == 'x86_64' && 'amd64' || 'arm64'}}
            -v ${{ github.workspace }}/ncbcc:/ncbcc
            -e SDK_VERSION=${{ inputs.version }}
          run: |
            env
            node --version
            cd /ncbcc
            ls -alh
            npm init -y
            npm install ini
            npm install couchbase-columnar@$SDK_VERSION -ddd
            npm list --depth=2
            node columnarQuickTest.js

  verify-alpine-linux:
    needs: test-setup
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04']
        node-version: ["16", "18", "20"]
        arch: ['x86_64', 'arm64']
    steps:
      - name: Set up QEMU
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - uses: actions/download-artifact@v4
        with:
          name: ncbcc-test-setup
          path: ncbcc
      - name: Run in docker (install via tag)
        if: ${{ inputs.npm_tag != '' }}
        uses: addnab/docker-run-action@v3
        with:
          image: node:${{ matrix.node-version }}-alpine
          options: >-
            --platform linux/${{ matrix.arch == 'x86_64' && 'amd64' || 'arm64'}}
            -v ${{ github.workspace }}/ncbcc:/ncbcc
            -e NPM_TAG=${{ inputs.npm_tag }}
          run: |
            env
            node --version
            cd /ncbcc
            ls -alh
            npm init -y
            npm install ini
            npm install couchbase-columnar@$NPM_TAG -ddd
            npm list --depth=2
            node columnarQuickTest.js
      - name: Run in docker (install via version)
        if: ${{ inputs.npm_tag == '' }}
        uses: addnab/docker-run-action@v3
        with:
          image: node:${{ matrix.node-version }}-alpine
          options: >-
            --platform linux/${{ matrix.arch == 'x86_64' && 'amd64' || 'arm64'}}
            -v ${{ github.workspace }}/ncbcc:/ncbcc
            -e SDK_VERSION=${{ inputs.version }}
          run: |
            env
            node --version
            cd /ncbcc
            ls -alh
            npm init -y
            npm install ini
            npm install couchbase-columnar@$SDK_VERSION -ddd
            npm list --depth=2
            node columnarQuickTest.js

  verify-macos:
    needs: test-setup
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-13", "macos-14"]
        node-version: ["16", "18", "20"]
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Confirm Node version
        run: |
          node --version
          node -p "process.arch"
      - uses: actions/download-artifact@v4
        with:
          name: ncbcc-test-setup
          path: ncbcc
      - name: Run verification (install via tag)
        if: ${{ inputs.npm_tag != '' }}
        run: |
          env
          node --version
          cd ncbcc
          ls -alh
          npm init -y
          npm install ini
          npm install couchbase-columnar@$NPM_TAG -ddd
          npm list --depth=2
          node columnarQuickTest.js
        env:
          NPM_TAG: ${{ inputs.npm_tag }}
      - name: Run verification (install via version)
        if: ${{ inputs.npm_tag == '' }}
        run: |
          env
          node --version
          cd ncbcc
          ls -alh
          npm init -y
          npm install ini
          npm install couchbase-columnar@$SDK_VERSION -ddd
          npm list --depth=2
          node columnarQuickTest.js
        env:
          SDK_VERSION: ${{ inputs.version }}

  verify-windows:
    needs: test-setup
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        node-version: ["16", "18", "20"]
        arch: ["x86_64"]
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Confirm Node version
        run: |
          node --version
          node -p "process.arch"
      - uses: actions/download-artifact@v4
        with:
          name: ncbcc-test-setup
          path: ncbcc
      - name: Run verification (install via tag)
        if: ${{ inputs.npm_tag != '' }}
        run: |
          env
          node --version
          cd ncbcc
          npm init -y
          npm install ini
          npm install couchbase-columnar@$env:NPM_TAG -ddd
          npm list --depth=2
          node columnarQuickTest.js
        env:
          NPM_TAG: ${{ inputs.npm_tag }}
      - name: Run verification (install via version)
        if: ${{ inputs.npm_tag == '' }}
        run: |
          env
          node --version
          cd ncbcc
          npm init -y
          npm install ini
          npm install couchbase-columnar@$env:SDK_VERSION -ddd
          npm list --depth=2
          node columnarQuickTest.js
        env:
          SDK_VERSION: ${{ inputs.version }}
